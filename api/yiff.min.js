// @ts-nocheck
export default async function handler(t,e){const{slug:n,embed:r=!1}=t.query,o=t.headers.host||"";var a=[];try{var i=await fetch(`https://${o}/unfiltered.json`);a=await i.json()}catch(t){return console.error("Couldn't grab the unfiltered domain whitelist:",t),e.status(500).json({error:`Couldn't grab the unfiltered domain whitelist: ${t}`})}if(!n)return e.status(400).json({error:"Invalid or missing post ID and extension"});const[s,p]=n.split("."),c=`https://e621.net/posts/${s}.json`;var l;l=a.includes(o)?"e621.net":"e926.net";try{const t=await fetch(c,{headers:{"User-Agent":"e694/1.6"}});if(!t.ok)return e.status(t.status).json({error:"Failed to fetch post data"});const n=await t.json(),a=n?.post,i=p??a.file.ext,u=a.preview?.url,y=`https://${o}/posts/${s}/file.${i}`,f=!("e926.net"==l&&"s"!==a.rating)&&["webm","mp4"].includes(i);var d="",m=a.tags.artist.concat(a.tags.contributor??[]),g=["sound_warning","third-party_edit","conditional_dnp"],h=m.filter((t=>!g.includes(t)));(a.tags.artist.includes("sound_warning")||a.tags.meta.includes("sound")&&!a.tags.meta.includes("no_sound"))&&(d="\nðŸ”Š Sound Warning! ðŸ”Š");const $=new Date(a.created_at).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"}),w={s:"Safe",q:"Questionable",e:"Explicit"};if("json"===p)return e.status(200).json(n);if(!a||!a.file?.url)return e.status(404).json({error:"Media URL not found in post data"});if("true"===r){const t=`\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <meta charset="UTF-8">\n          <meta name="viewport" content="width=device-width, initial-scale=1.0">\n          <meta property="theme-color" content="#00709e" />\n          <link rel="icon" href="/favicon.ico" />\n          <meta name="application-name" content="e694">\n\n          <link rel="alternate" type="application/json+oembed" href="https://${o}/${s}.json+oembed">\n          <link rel="apple-touch-icon" href="https://e694.net/icon.png" />\n          <link rel="icon" type="image/png" href="https://e694.net/icon.png">\n          <link rel="icon" type="image/png" sizes="32x32" href="https://e694.net/favicon32.png">\n          <link rel="icon" type="image/png" sizes="16x16" href="https://e694.net/favicon16.png">\n          <meta property="title" content="#${s}" />\n\n          \x3c!-- Open Graph --\x3e\n          <meta property="og:title" content="#${s} by ${1===h.length?`${h[0]}`:`${h[0]} +${h.length-1}`}" />\n          <meta property="og:type" content="${f?"video.other":"image"}" />\n          <meta property="og:description" content="Posted on ${$}\nRating: ${w[a.rating]} â€Ž â€¢ â€Ž Score: ${a.score.total}${d}" />\n          ${f?`\n            <meta property="og:video" content="${y}" />\n            <meta property="og:video:type" content="video/${i}" />\n            <meta property="og:video:width" content="1280" />\n            <meta property="og:video:height" content="720" />\n            <meta property="og:image" content="${u}" />\n            <meta property="og:site_name" content="Video from ${l} â€¢ e694">\n          `:`\n            <meta property="og:image" content="${y}" />\n            <meta property="og:site_name" content="Image from ${l} â€¢ e694">\n          `}\n\n          \x3c!-- Twitter --\x3e\n          <meta property="twitter:card" content="${f?"player":"summary_large_image"}" />\n          <meta property="twitter:title" content="Post from ${l}" />\n          ${f?`\n            <meta property="twitter:image" content="${u}" />\n            <meta property="twitter:player" content="${y}" />\n            <meta property="twitter:player:width" content="1280" />\n            <meta property="twitter:player:height" content="720" />\n            <meta property="twitter:player:stream" content="${y}" />\n            <meta property="twitter:player:stream:content_type" content="video/${i}" />\n          `:`\n            <meta property="twitter:image" content="${y}" />\n          `}\n          <style>html,body{background:#012e57;}</style>\n        </head>\n        <body>\n            <script>window.location = "https://${l}/posts/${s}"<\/script>\n        </body>\n        </html>\n      `.trim();return e.setHeader("Content-Type","text/html"),e.status(200).send(t)}const v=await fetch("e926.net"==l&&"s"!==a.rating?"https://e694.net/unsafe.png":a.file.url,{headers:{"User-Agent":"e694/1.6"}});if(!v.ok)return e.status(v.status).json({error:"Failed to fetch image"});const j=await v.arrayBuffer(),b=Buffer.from(j),x=v.headers.get("content-type")||"image/jpeg";return e.setHeader("Cache-Control","public, max-age=300, stale-while-revalidate=60"),e.setHeader("Content-Disposition",`inline; filename="${s}.${i}"`),e.setHeader("Content-Type",x),e.setHeader("Access-Control-Allow-Origin","*"),e.status(200).send(b)}catch(t){return console.error("Error:",t),e.status(500).json({error:"Failed to fetch from API",details:t.message})}}